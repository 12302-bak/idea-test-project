<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd
                        http://www.springframework.org/schema/mvc
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
    <!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
    <context:component-scan base-package="site.wtfu.framework.controller" />

    <!-- 定义跳转的文件的前后缀 ，视图模式配置-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
        <property name="prefix" value="/WEB-INF/jsp/" />
        <property name="suffix" value=".jsp" />
    </bean>

    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="utf-8" />
        <!-- 文件大小最大值 -->
        <property name="maxUploadSize" value="10485760000" />
        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="40960" />
    </bean>

    <bean id="updateMappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>application/json;charset=UTF-8</value>
            </list>
        </property>
        <constructor-arg index="0">
            <bean class="site.wtfu.framework.web.config.ExObjectMapper" />
        </constructor-arg>
    </bean>


    <!--
        Deprecated as of Spring 3.2, in favor of RequestMappingHandlerAdapter

    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="updateMappingJacksonHttpMessageConverter" />
            </list>
        </property>
    </bean>
    -->


    <!--<mvc:view-controller path="/view" view-name="jsp/view"/>-->
    <!--现在是生效的。  加.do 是让它经过dispatch servlet，再由ParameterizableViewController处理-->
    <mvc:view-controller path="/startup.do" view-name="startup"/>

    <!--
    <mvc:resources mapping="swagger-ui.html" location="classpath*:/META-INF/resources/"/>
    <mvc:resources mapping="/webjars/**" location="classpath*:/META-INF/resources/webjars/"/>
    -->
    <mvc:resources mapping="/static/**" location="/resources/"  cache-period="31536000"/>

    <!--
        配置view-Controller 必须配置下面的，不然注解controller 就不生效
    -->
    <mvc:annotation-driven>
        <mvc:argument-resolvers>
            <bean class="site.wtfu.framework.web.resolver.FormObjArgumentResolver" />
        </mvc:argument-resolvers>

        <mvc:message-converters>
            <ref bean="updateMappingJacksonHttpMessageConverter" />
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!-- 拦截器 -->
    <mvc:interceptors>
        <mvc:interceptor>
            <!-- 匹配的是url路径， 如果不配置或/**,将拦截所有的Controller -->
            <mvc:mapping path="/**" />
            <!-- 拦截器类 -->
            <bean class="site.wtfu.framework.web.interceptor.TestInterceptor" />
        </mvc:interceptor>
        <!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 -->
    </mvc:interceptors>

    <!-- 这种方式会导致一些转换器未加载。使用mvc 提供的 annotation-driven 注册
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="order" value="2147483646" />
        <property name="customArgumentResolvers">
            <list>
                <bean class="site.wtfu.framework.web.resolver.FormObjArgumentResolver" />
            </list>
        </property>
    </bean>-->

</beans>
